import React from 'react';
import clsx from 'clsx';

export type <%= pascalCase(name) %>Variant = 'default' | 'secondary' | 'outline' | 'ghost' | 'destructive';

const variantClasses: Record<<%= pascalCase(name) %>Variant, string> = {
  default: 'bg-blue-600 hover:bg-blue-700 text-white',
  secondary: 'bg-gray-500 hover:bg-gray-600 text-white',
  outline: 'border border-gray-300 hover:bg-gray-100 text-gray-700',
  ghost: 'bg-transparent hover:bg-gray-100 text-gray-700',
  destructive: 'bg-red-600 hover:bg-red-700 text-white'
};

export interface <%= pascalCase(name) %>Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: <%= pascalCase(name) %>Variant;
}

export const <%= pascalCase(name) %>: React.FC<<%= pascalCase(name) %>Props> = ({
  variant = 'default',
  className,
  children,
  ...rest
}) => {
  return (
    <button
      {...rest}
      className={clsx(
        'px-4 py-2 rounded font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2',
        variantClasses[variant],
        className
      )}
    >
      {children}
    </button>
  );
};

export default <%= pascalCase(name) %>;
